# Dependencies and Setup
import pandas as pd
import numpy as np

# File to Load (Remember to Change These)
file_to_load = "Resources/purchase_data.csv"

# Read Purchasing File and store into Pandas data frame
data_df = pd.read_csv(file_to_load)
#data_df.head()



# Player Count
TotalPlayers = data_df["SN"].value_counts()
#print(TotalPlayers)
Count = pd.DataFrame({"Total Players":[len(TotalPlayers)]})
Count



# Purchasing Analysis (Total)
#ave price, num of purchase, Total Revenue, Unique items
Unique_items = len(data_df["Item ID"].unique())
Avg = data_df["Price"].mean()
Num_of_purchases = data_df["SN"].count()
Total_revenue = data_df["Price"].sum()
#UniIts, Ave, NumOP, TotalR

summary_df = pd.DataFrame({"Nnumber of Unique items":[Unique_items],
                           "Average Price":[Avg], 
                           "Number of Purchases":[Num_of_purchases],
                           "Total Revenue":[Total_revenue]})

summary_df.style.format({'Average Price':"${:,.2f}",'Total Revenue': '${:,.2f}'})



# Gender DemographicsPurchasing Analysis (Gender)
gender = data_df.groupby("Gender")
count_gender = gender.nunique()["SN"]
gender_count = data_df["SN"].drop_duplicates().count()

percent = gender_df / gender_count

gender_demographics = pd.DataFrame({"Percentage of Players": percent,"Total Count": gender_count})
                                
gender_demographics.index.name = None
gender_demographics.sort_values(["Total Count"], ascending = False).style.format({"Percentage of Players":"{:.2f}%"})




# Purchasing Analysis (Gender)
#Purchase Count，Average Purchase Price， Total Purchase Value ,Avg Total Purchase per Person
Gender_purchase = gender["Purchase ID"].count()
Gender_avg = gender["Price"].mean()
Gender_total = gender["Price"].sum()
Avg_per_person = Gender_total / count_gender

gender_analysis = pd.DataFrame({"Purchase Count": Gender_purchase,
                                "Average Purchase Price": Gender_avg,
                                "Total Purchase Value": Gender_total,
                                "Average Total Purchase per Person": Avg_per_person})

gender_analysis.index.name = "Gender"

gender_analysis.style.format({'Average Purchase Price':"${:,.2f}",
                              'Total Purchase Value': '${:,.2f}',
                              'Average Total Purchase per Person': '${:,.2f}'})



# Age Demographics
#Total Count, Percentage of Players
bins = [0, 9.99, 14.99, 19.99, 24.99, 29.99, 34.99, 39.99, 46]
group_names = ["<10", "10-14", "15-19", "20-24", "25-29", "30-34", "35-39", "40+"]

data_df["Age Group"] = pd.cut(data_df["Age"], bins, labels=group_names)
data_df.head()

#Total Count, Percentage of Players
age_group = data_df.groupby("Age Group")
total_count = age_group["SN"].nunique()
total_count = data_df["SN"].drop_duplicates().count()

percentage_of_players =age_df / total_count

age_demographics = pd.DataFrame({"Percentage of Players": percentage_of_players, 
                                 "Total Count": total_count})

age_demographics.index.name = None
age_demographics.style.format({"Percentage of Players":"{:,.2f}%"})
 

  
# Purchasing Analysis (Age)
#Purchase Count，Average Purchase Price， Total Purchase Value ,Avg Total Purchase per Person
Age_purchase = age_group["Purchase ID"].count()
Age_avg = age_group["Price"].mean()
Age_total = age_group["Price"].sum()
avg_per_person_age = Age_total/total_count

age_demographics = pd.DataFrame({"Purchase Count": Age_purchase,
                                 "Average Purchase Price": Age_avg,
                                 "Total Purchase Value":Age_total,
                                 "Average Purchase Total per Person": avg_per_person_age})

age_demographics.index.name = None

age_demographics.style.format({"Average Purchase Price":"${:,.2f}",
                               "Total Purchase Value":"${:,.2f}",
                               "Average Purchase Total per Person":"${:,.2f}"})                              



# Top Spenders
# Purchase Count, Average Purchase Price, Total Purchase Value
top = data_df.groupby("SN")

top_count = top["Purchase ID"].count()
top_avg = top["Price"].mean()
top_total_value = top["Price"].sum()


top_spenders = pd.DataFrame({"Purchase Count": top_count,
                             "Average Purchase Price": top_avg,
                             "Total Purchase Value":top_total_value})

final_spenders = top_spenders.sort_values(["Total Purchase Value"], ascending=False).head()

final_spenders.style.format({"Average Purchase Price":"${:,.2f}",
                               "Total Purchase Value":"${:,.2f}"})
                               

  
  
# Most Popular Items
#Item ID, Item Name, Purchase Count, Item Price, Total Purchase Value
items = data_df[["Item ID", "Item Name", "Price"]]

items_item = items.groupby (["Item ID","Item Name"])

items_count = items_item["Price"].count()
items_value = items_item["Price"].sum()
items_price = items_value / items_count

most_popular_items = pd.DataFrame({"Purchase Count": items_count, 
                                   "Item Price": items_price,
                                   "Total Purchase Value": items_value})

final_most_popular = most_popular_items.sort_values(["Purchase Count"], ascending=False).head()

final_most_popular.style.format({"Item Price":"${:,.2f}",
                                "Total Purchase Value":"${:,.2f}"})
                                
most_profitable = most_popular_items.sort_values(["Total Purchase Value"], ascending=False).head()

most_profitable.style.format({"Item Price":"${:,.2f}",
                              "Total Purchase Value":"${:,.2f}"})
